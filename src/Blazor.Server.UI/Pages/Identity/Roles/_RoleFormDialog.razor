@using CleanArchitecture.Blazor.Application.Features.Identity.Dto
@inherits MudComponentBase
@inject IStringLocalizer<Roles> L
<MudDialog>
    <DialogContent>
        <MudForm Model="Model" @ref="_form">
            <MudGrid>
                <MudItem xs="12">
                    <MudTextField Label="@L[Model.GetMemberDescription(x => x.Name)]" @bind-Value="Model.Name"
                                  Required="true"
                                  For="@(() => Model.Name)"
                                  RequiredError="@L["DefaultRole name is required!"]"
                                  Validation="@(_modelValidator.ValidateValue)">
                    </MudTextField>
                </MudItem>
                <MudItem xs="12">
                    <MudTextField Label="@L[Model.GetMemberDescription(x => x.Description)]"
                                  For="@(() => Model.Description)"
                                  @bind-Value="Model.Description">
                    </MudTextField>
                </MudItem>
            </MudGrid>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">@ConstantString.Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">@ConstantString.Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    MudForm? _form;
    readonly RoleDtoValidator _modelValidator = new();

    [EditorRequired]
    [Parameter]
    public ApplicationRoleDto Model { get; set; } = default!;

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; } = default!;

    async Task Submit()
    {
        await _form!.Validate();
        if (_form!.IsValid)
        {
            MudDialog.Close(DialogResult.Ok(true));
        }
    }

    void Cancel()
    {
        MudDialog.Cancel();
    }

}